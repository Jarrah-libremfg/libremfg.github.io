<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>how-to on</title><link>https://libremfg.github.io/categories/how-to/</link><description>Recent content in how-to on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Thu, 19 Oct 2023 13:52:23 -0300</lastBuildDate><atom:link href="https://libremfg.github.io/categories/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Back up the Graph DB</title><link>https://libremfg.github.io/deploy/backup/graphdb/</link><pubDate>Wed, 18 Oct 2023 11:01:46 -0300</pubDate><guid>https://libremfg.github.io/deploy/backup/graphdb/</guid><description>This guide shows you how to back up the Rhize Graph database. You can also use it to model an automation workflow.
Prerequisites Before you start, ensure you have the following:
A designated backup location, for example ~/rhize-backups/database. Access to your Rhize Kubernetes Environment kubectl Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the OpenLens IDE, if you prefer to manage Kubernetes graphically.</description></item><item><title>Restore Grafana</title><link>https://libremfg.github.io/deploy/restore/grafana/</link><pubDate>Thu, 19 Oct 2023 13:52:23 -0300</pubDate><guid>https://libremfg.github.io/deploy/restore/grafana/</guid><description>This guide shows you how to restore Grafana in your Rhize environment.
Prerequisites Before you start, ensure you have the following:
kubectl A Grafana backup Steps Confirm the cluster and namespace are correct.
## context kubectl config current-context ## namespace kubectl get namespace Copy the grafana data tar file into the new Grafana Pod within the /var/lib/grafana directory.
kubectl cp ./grafana-data-2023-11-01T16.05.53.tar.gz grafana-64cd6db6f4-8txc2:/var/lib/grafana/ Untar the file
tar -xvf grafana-data-2023-11-01T16.05.53.tar.gz --directory / Copy the Grafana configuration file into the new Grafana Pod within /usr/share/grafana/conf directory.</description></item><item><title>Back up Grafana</title><link>https://libremfg.github.io/deploy/backup/grafana/</link><pubDate>Wed, 18 Oct 2023 11:01:56 -0300</pubDate><guid>https://libremfg.github.io/deploy/backup/grafana/</guid><description>This guide shows you the procedure to back up Grafana on your Rhize Kubernetes deployment. For general instructions, refer to the official Back up Grafana documentation.
Prerequisites Before you start, ensure you have the following:
A designated backup location, for example ~/rhize-backups/grafana. Access to the Rhize Kubernetes Environment kubectl Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the OpenLens IDE, if you prefer to manage Kubernetes graphically Also, before you start, confirm you are in the right context and namespace.</description></item><item><title>Upgrade</title><link>https://libremfg.github.io/deploy/upgrade/</link><pubDate>Wed, 18 Oct 2023 15:02:24 -0300</pubDate><guid>https://libremfg.github.io/deploy/upgrade/</guid><description>This guide shows you how to upgrade Rhize.
Prerequisites Before you start, ensure you have the following:
Access to the Rhize Kubernetes Environment helm kubectl Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the OpenLens IDE, if you prefer to manage Kubernetes graphically Be sure that you notify relevant parties of the coming upgrade.
Procedure First, record the old and new versions, their context, and namespaces.</description></item></channel></rss>