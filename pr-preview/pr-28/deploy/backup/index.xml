<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Back up on</title><link>https://libremfg.github.io/deploy/backup/</link><description>Recent content in Back up on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Tue, 12 Sep 2023 19:35:35 +1100</lastBuildDate><atom:link href="https://libremfg.github.io/deploy/backup/index.xml" rel="self" type="application/rss+xml"/><item><title>Back up the Graph DB</title><link>https://libremfg.github.io/deploy/backup/graphdb/</link><pubDate>Wed, 18 Oct 2023 11:01:46 -0300</pubDate><guid>https://libremfg.github.io/deploy/backup/graphdb/</guid><description>This guide shows you how to back up the Rhize Graph database. You can also use it to model an automation workflow.
Prerequisites Before you start, ensure you have the following:
A designated backup location, for example ~/rhize-backups/database. Access to your Rhize Kubernetes Environment Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the k8 Lens IDE, if you prefer to use Kubernetes graphically.</description></item><item><title>Back up Grafana</title><link>https://libremfg.github.io/deploy/backup/grafana/</link><pubDate>Wed, 18 Oct 2023 11:01:56 -0300</pubDate><guid>https://libremfg.github.io/deploy/backup/grafana/</guid><description>This guide shows you the procedure to back up Grafana on your Rhize Kubernetes deployment. For general instructions, refer to the official Back up Grafana documentation.
Prerequisites Before you start, ensure you have the following:
A designated backup location, for example ~/rhize-backups/grafana. Access to the Rhize Kubernetes Environment Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the k8 Lens IDE, if you prefer to use Kubernetes graphically Also, before you start, confirm you are in the right context and namespace.</description></item><item><title>NATS stream backups</title><link>https://libremfg.github.io/deploy/backup/nats-stream-backups/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libremfg.github.io/deploy/backup/nats-stream-backups/</guid><description>To help recover from pod failures, Rhize creates manual backups of the NATS message stores for some critical services.
BPMN activity node backups If a BPMN pod engine dies, NATS automatically replays any BPMN activity node that has lasted for ten minutes or fewer. If a node process takes longer than 10 minutes, NATS ages it out of the queue. The process continues, but if the pod dies or is interrupted, that node is permanently dropped.</description></item></channel></rss>