<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>User guides on</title><link>https://libremfg.github.io/how-to/</link><description>Recent content in User guides on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 15 Nov 2023 16:29:21 -0300</lastBuildDate><atom:link href="https://libremfg.github.io/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Work masters reference</title><link>https://libremfg.github.io/how-to/master-definition-reference/</link><pubDate>Wed, 15 Nov 2023 16:29:21 -0300</pubDate><guid>https://libremfg.github.io/how-to/master-definition-reference/</guid><description>To make a production object visible to the Rhize data hub, you must define it as a data model. For a no-code interface to define an object, use the Work masters UI.
These sections document all the objects that you can add through the UI, and the fields and properties that you can associate with them. All these models are based on the ISA-95 standard, and most are explictely defined in Part two, which describes the Role-based equipment hierarchy.</description></item><item><title>Stream Data</title><link>https://libremfg.github.io/how-to/stream/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libremfg.github.io/how-to/stream/</guid><description>Stream data in and out of Rhize.
Publishing Changes with Change-Data-Capture You can use change data capture (CDC) to track data changes over time; including mutations and drops in your database. RHIZE&amp;rsquo;s CDC implementation lets you use Kafka, Nats or a local file as a sink to store CDC updates streamed by RHIZE&amp;rsquo;s Alpha leader nodes.
When CDC is enabled, RHIZE streams events for all set and delete mutations, except those that affect password fields; along with any drop events.</description></item></channel></rss>