<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Use the knowledge graph on</title><link>https://libremfg.github.io/how-to/gql/</link><description>Recent content in Use the knowledge graph on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Nov 2023 09:43:30 -0300</lastBuildDate><atom:link href="https://libremfg.github.io/how-to/gql/index.xml" rel="self" type="application/rss+xml"/><item><title>Call the GraphQL API</title><link>https://libremfg.github.io/how-to/gql/call-the-graphql-api/</link><pubDate>Wed, 22 Nov 2023 09:43:30 -0300</pubDate><guid>https://libremfg.github.io/how-to/gql/call-the-graphql-api/</guid><description>In a manufacturing operation, all event data is interrelated. To make these relations explorable, Rhize stores data in a special-purpose graph database designed to represent all levels of the manufacturing process. This database is enforced by our ISA-95 schema, the most comprehensive data representation of ISA-95 in the world.
Rhize exposes this database through a GraphQL API. Unlike REST, GraphQL requires only one endpoint, and you can define exactly the data that you return for each operation.</description></item><item><title>Query, mutate, and subscribe</title><link>https://libremfg.github.io/how-to/gql/query-mutate-subscribe/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libremfg.github.io/how-to/gql/query-mutate-subscribe/</guid><description>This document provides examples for how to use the Rhize GraphQL API to query, update, and subscribe to objects in the Manufacturing data hub.
In GraphQL, an operation is a type of request to the server. Rhize supports three types of operations:
Queries return data and subsets of data. Mutations change the data on the server side. Subscriptions notify about data changes in real time. Queries Most queries start with these three verbs, each of which indicates the resources to return.</description></item></channel></rss>