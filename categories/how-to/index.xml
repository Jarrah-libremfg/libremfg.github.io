<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>how-to on</title><link>https://libremfg.github.io/categories/how-to/</link><description>Recent content in how-to on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 22 Nov 2023 09:43:30 -0300</lastBuildDate><atom:link href="https://libremfg.github.io/categories/how-to/index.xml" rel="self" type="application/rss+xml"/><item><title>Create objects from the UI</title><link>https://libremfg.github.io/how-to/define-models/create-objects-ui/</link><pubDate>Mon, 20 Nov 2023 15:36:03 -0300</pubDate><guid>https://libremfg.github.io/how-to/define-models/create-objects-ui/</guid><description>To make a production object visible to the Rhize data hub, you must define it as a data model. Along with is API, Rhize also has a graphical interface to create and update objects in your role-based equipment hierarchy.
Often, one object references another: for example, a piece of equipment may belong to an equipment class, have a unit of measure as a property, and be associated with process segment. These associations form nodes and edges in your knowledge graph, so the more information relationships that you accurately create, the better.</description></item><item><title>Overview</title><link>https://libremfg.github.io/deploy/install/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libremfg.github.io/deploy/install/overview/</guid><description>This guide walks you through how to Install Rhize and its services in a Kubernetes environment. You can also use these docs to model automation workflows in your CI.
This procedure aims to be as generic and vendor-neutral as possible. Some configuration depends on where and how you run your IT infrastructureâ€”what cloud provider you use, preferred auxiliary tools, and so on&amp;mdash;so your team must adapt the process for its particular use cases.</description></item><item><title>Set up Kubernetes</title><link>https://libremfg.github.io/deploy/install/setup-kubernetes/</link><pubDate>Fri, 22 Sep 2023 14:49:53 -0300</pubDate><guid>https://libremfg.github.io/deploy/install/setup-kubernetes/</guid><description>This guide shows you how to install Rhize services on your Kubernetes cluster. You can also use this procedure as the model for an automation workflow in your CI.
Prerequisites Before starting, ensure that you have the following technical requirements.
Software requirements:
kubectl Helm Curl, or some similar program to make HTTP requests from the command line Access requirements:
Administrative privileges for a running Kubernetes cluster in your environment. Your organization must set this up.</description></item><item><title>Call the GraphQL API</title><link>https://libremfg.github.io/how-to/gql/call-the-graphql-api/</link><pubDate>Wed, 22 Nov 2023 09:43:30 -0300</pubDate><guid>https://libremfg.github.io/how-to/gql/call-the-graphql-api/</guid><description> Prerequisites Before you start, ensure you have the following:
A key Ac Basic syntax Procedure</description></item><item><title>Back up the Graph DB</title><link>https://libremfg.github.io/deploy/backup/graphdb/</link><pubDate>Wed, 18 Oct 2023 11:01:46 -0300</pubDate><guid>https://libremfg.github.io/deploy/backup/graphdb/</guid><description>This guide shows you how to back up the Rhize Graph database. You can also use it to model an automation workflow.
Prerequisites Before you start, ensure you have the following:
A designated backup location, for example ~/rhize-backups/database. Access to your Rhize Kubernetes Environment Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the k8 Lens IDE, if you prefer to use Kubernetes graphically.</description></item><item><title>Define production models</title><link>https://libremfg.github.io/how-to/define-models/</link><pubDate>Fri, 22 Sep 2023 14:50:39 -0300</pubDate><guid>https://libremfg.github.io/how-to/define-models/</guid><description>To connect data, you must define it as a model in the Rhize data hub.
Use the UI to define it for an individual unit or class POST a batch over the GraphQL API Use BPMN as a filter receive an incoming ERP document and map into the system The trade offs are usually upfront configuration time, number of items to add, and level of automation. Adding an item over the UI requires no programming skill, but you can only add only one unit at a time.</description></item><item><title>Configure Keycloak</title><link>https://libremfg.github.io/deploy/install/keycloak/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libremfg.github.io/deploy/install/keycloak/</guid><description>Rhize uses Keycloak as an OpenID provider. In your cluster, the Keycloak server to authenticate users, services, and manage Role-based access controls.
This topic describes how to set up Keycloak in your Rhize cluster. For a conceptual overview of the authentication flow, read About OpenID Connect
Prerequisites First, ensure that you have followed the instructions from Set up Kubernetes. All prerequisites for that step apply here.
Steps Follow these steps to configure a Keycloak realm and associate Rhize services to Keycloak clients, groups, roles, and policies.</description></item><item><title>Install Rhize services</title><link>https://libremfg.github.io/deploy/install/services/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://libremfg.github.io/deploy/install/services/</guid><description>The final installation step is to install the Rhize services in your Kubernetes cluster.
Prerequisites This topic assumes you have Set up Kubernetes and Configured Keycloak. All the prerequisites for those topics apply here. Configure load balancing for the following DNS records: Service Domain Admin UI &amp;lt;CUSTOMER&amp;gt;-libre.libremfg.ai Keycloak &amp;lt;CUSTOMER&amp;gt;-auth.libremfg.ai GraphQL &amp;lt;CUSTOMER&amp;gt;-graphql.libremfg.ai NATS &amp;lt;CUSTOMER&amp;gt;-mqtt.libremfg.ai Highbyte &amp;lt;CUSTOMER&amp;gt;-highbyte.libremfg.ai Grafana &amp;lt;CUSTOMER&amp;gt;-grafana.libremfg.ai BPMN &amp;lt;CUSTOMER&amp;gt;-bpmn.libremfg.ai Overrides Each service is installed through a Helm YAML file. For some of these services, you might need to edit this file to add credential information and modify defaults.</description></item><item><title>Connect process events</title><link>https://libremfg.github.io/how-to/publish-subscribe/</link><pubDate>Fri, 22 Sep 2023 14:50:39 -0300</pubDate><guid>https://libremfg.github.io/how-to/publish-subscribe/</guid><description/></item><item><title>Back up</title><link>https://libremfg.github.io/deploy/backup/</link><pubDate>Tue, 12 Sep 2023 19:35:35 +1100</pubDate><guid>https://libremfg.github.io/deploy/backup/</guid><description>Backup is critical to ensure reliability and recovery.
These guides show you how to back up different services and data on Rhize. They also serve as blueprints for automation.
Your organization must determine how frequently you backup services, and how long you store them for. The correct practice here is highly contextual, depending on the size of the data, the importance of the data, and the general regulatory and governance demands of your industry.</description></item><item><title>Restore</title><link>https://libremfg.github.io/deploy/restore/</link><pubDate>Tue, 12 Sep 2023 19:35:35 +1100</pubDate><guid>https://libremfg.github.io/deploy/restore/</guid><description>These guides show you how to restore data from backup. They also serve as blueprints for automation.
Even if you don&amp;rsquo;t need to restore data, it&amp;rsquo;s a good practice to test restoration periodically.</description></item><item><title>Restore Grafana</title><link>https://libremfg.github.io/deploy/restore/grafana/</link><pubDate>Thu, 19 Oct 2023 13:52:23 -0300</pubDate><guid>https://libremfg.github.io/deploy/restore/grafana/</guid><description>This guide shows you how to restore Grafana in your Rhize environment.
Prerequisites Before you start, ensure you have the following:
kubectl A Grafana backup Steps Confirm the cluster and namespace are correct:
## context kubectl config current-context ## namespace kubectl get namespace If a checksum file does not exist for the latest backups, create one:
sha256sum &amp;lt;LATEST_DATA_FILE&amp;gt;.tar.gz &amp;lt;LATEST_CONF_FILE&amp;gt;.tar.gz &amp;gt; backup.sums Copy the checksum file into the new Grafana Pod within the /home/grafana directory:</description></item><item><title>Back up Grafana</title><link>https://libremfg.github.io/deploy/backup/grafana/</link><pubDate>Wed, 18 Oct 2023 11:01:56 -0300</pubDate><guid>https://libremfg.github.io/deploy/backup/grafana/</guid><description>This guide shows you the procedure to back up Grafana on your Rhize Kubernetes deployment. For general instructions, refer to the official Back up Grafana documentation.
Prerequisites Before you start, ensure you have the following:
A designated backup location, for example ~/rhize-backups/grafana. Access to the Rhize Kubernetes Environment Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the k8 Lens IDE, if you prefer to use Kubernetes graphically Also, before you start, confirm you are in the right context and namespace.</description></item><item><title>Create BPMN workflows</title><link>https://libremfg.github.io/how-to/bpmn/create-workflow/</link><pubDate>Fri, 22 Sep 2023 14:50:39 -0300</pubDate><guid>https://libremfg.github.io/how-to/bpmn/create-workflow/</guid><description>This topic shows you how to use the BPMN UI to create event-driven workflows. To view the full list of elements and their parameters, refer to BPMN elements.
Prerequisites To create a workflow, you&amp;rsquo;ll need:
An installed environment Topics to publish and subscribe to The ability to call the GraphQL API and understand JSON. General procedures Every workflow is different, but the overall procedure usually works like this:
Create a start event:</description></item><item><title>Handle events</title><link>https://libremfg.github.io/how-to/bpmn/</link><pubDate>Fri, 22 Sep 2023 14:50:39 -0300</pubDate><guid>https://libremfg.github.io/how-to/bpmn/</guid><description>The heart of a manufacturing process is not data, but the event.
For its event handling, Rhize uses a custom BPMN engine:
The low-code, graphical notation makes workflow programming accessible to more people in your operation Its event-based workflows can listen for events published to the message broker, and send messages back The service task interface can make GraphQL queries, thus operate directly on the data in your data hub. In the following topics, learn how to use Rhize&amp;rsquo;s BPMN engine.</description></item><item><title>Upgrade</title><link>https://libremfg.github.io/deploy/upgrade/</link><pubDate>Wed, 18 Oct 2023 15:02:24 -0300</pubDate><guid>https://libremfg.github.io/deploy/upgrade/</guid><description>This guide shows you how to upgrade Rhize.
Prerequisites Before you start, ensure you have the following:
Access to the Rhize Kubernetes Environment helm Optional: kubectx utilities kubectx to manage multiple clusters kubens to switch between and configure namespaces easily Optional: the k8 Lens IDE, if you prefer to use Kubernetes graphically Be sure that you notify relevant parties of the coming upgrade.
Procedure First, record the old and new versions, their context, and namespaces.</description></item></channel></rss>