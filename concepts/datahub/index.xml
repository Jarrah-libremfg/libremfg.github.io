<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>DataHub on</title><link>/concepts/datahub/</link><description>Recent content in DataHub on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/concepts/datahub/index.xml" rel="self" type="application/rss+xml"/><item><title>ISA95 Data Model</title><link>/concepts/datahub/isa-95-data-model/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/concepts/datahub/isa-95-data-model/</guid><description/></item><item><title>Overview</title><link>/concepts/datahub/overview/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/concepts/datahub/overview/</guid><description>Overview Multi-site manufacturing businesses have a data governance problem.
If they implement data governance centrally, it&amp;rsquo;s really difficult to get the people at each site aligned and in agreement. This leads to centrally governed reports that site personnel don&amp;rsquo;t use worse, are inaccurate.
If they implement data governance at the site level, it is difficult to align data centrally to enable applications and analytics to be built once and deployed many times across sites.</description></item><item><title>Stream Data</title><link>/concepts/datahub/streaming-data/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/concepts/datahub/streaming-data/</guid><description>Stream data in and out of Rhize.
Publishing Changes with Change-Data-Capture You can use change data capture (CDC) to track data changes over time; including mutations and drops in your database. RHIZE&amp;rsquo;s CDC implementation lets you use Kafka, Nats or a local file as a sink to store CDC updates streamed by RHIZE&amp;rsquo;s Alpha leader nodes.
When CDC is enabled, RHIZE streams events for all set and delete mutations, except those that affect password fields; along with any drop events.</description></item></channel></rss>