<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Clients on</title><link>/clients/</link><description>Recent content in Clients on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 20 Mar 2017 22:25:17 +1100</lastBuildDate><atom:link href="/clients/index.xml" rel="self" type="application/rss+xml"/><item><title>Overview</title><link>/clients/overview/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/overview/</guid><description>Implementation Clients can communicate with the server in two different ways:
Via gRPC: internally this uses Protocol Buffers (the proto file used by Dgraph is located at api.proto).
Via HTTP: there are various endpoints, each accepting and returning JSON. There is a one to one correspondence between the HTTP endpoints and the gRPC service methods.
It&amp;rsquo;s possible to interface with Dgraph directly via gRPC or HTTP. However, if a client library exists for you language, this will be an easier option.</description></item><item><title>Go</title><link>/clients/go/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/go/</guid><description>The Go client communicates with the server on the gRPC port (default value 9080).
The client can be obtained in the usual way via go get:
Requires at least Go 1.11 export GO111MODULE=on go get -u -v github.com/dgraph-io/dgo/v200 The full GoDoc contains documentation for the client API along with examples showing how to use it.
More details on the supported versions can be found at this link.
Create the client To create a client, dial a connection to Dgraph&amp;rsquo;s external gRPC port (typically 9080).</description></item><item><title>C#</title><link>/clients/csharp/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/csharp/</guid><description>An implementation for a Dgraph client in C#, using gRPC. This client follows the Dgraph Go client closely.
Tip The official C# client can be found here. Follow the install instructions to get it up and running. Supported Versions More details on the supported versions can be found at this link.
Using a Client Creating a Client Make a new client by passing in one or more GRPC channels pointing to alphas.</description></item><item><title>Java</title><link>/clients/java/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/java/</guid><description>A minimal implementation for a Dgraph client for Java 1.8 and above, using gRPC. This client follows the Dgraph Go client closely.
Tip The official Java client can be found here. Follow the install instructions to get it up and running. Supported Versions More details on the supported versions can be found at this link.
Quickstart Build and run the DgraphJavaSample project in the samples folder, which contains an end-to-end example of using the Dgraph Java client.</description></item><item><title>Python</title><link>/clients/python/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/python/</guid><description>Official Dgraph client implementation for Python (Python &amp;gt;= v2.7 and &amp;gt;= v3.5), using gRPC. This client follows the Dgraph Go client closely.
Tip The official Python client can be found here. Follow the install instructions to get it up and running. Supported Versions More details on the supported versions can be found at this link.
Using a client Tip You can get a simple example project, which contains an end-to-end working example of how to use the Python client.</description></item><item><title>Unofficial Dgraph Clients</title><link>/clients/unofficial-clients/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/unofficial-clients/</guid><description> Note These third-party clients are contributed by the community and are not officially supported by Dgraph. C# https://github.com/AlexandreDaSilva/DgraphNet https://github.com/schivei/dgraph4net Dart https://github.com/marceloneppel/dgraph Elixir https://github.com/liveforeverx/dlex https://github.com/ospaarmann/exdgraph Go https://github.com/fenos/dqlx JavaScript https://github.com/ashokvishwakarma/dgraph-orm https://github.com/gverse/gverse Rust https://github.com/Swoorup/dgraph-rs https://github.com/selmeci/dgraph-tonic Apache Spark Connector https://github.com/G-Research/spark-dgraph-connector</description></item><item><title>Raw HTTP</title><link>/clients/raw-http/</link><pubDate>Mon, 20 Mar 2017 22:25:17 +1100</pubDate><guid>/clients/raw-http/</guid><description>Warning Raw HTTP needs more chops to use than our language clients. We wrote this guide to help you build a Dgraph client in a new language. It&amp;rsquo;s also possible to interact with Dgraph directly via its HTTP endpoints. This allows clients to be built for languages that don&amp;rsquo;t have access to a working gRPC implementation.
In the examples shown here, regular command line tools such as curl and jq are used.</description></item></channel></rss>